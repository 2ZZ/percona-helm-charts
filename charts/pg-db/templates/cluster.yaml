apiVersion: pgv2.percona.com/v2
kind: PerconaPGCluster
metadata:
  annotations:
    current-primary: {{ include "pg-database.fullname" . }}
  labels:
    crunchy-pgha-scope: {{ include "pg-database.fullname" . }}
    deployment-name: {{ include "pg-database.fullname" . }}
    name: {{ include "pg-database.fullname" . }}
    pg-cluster: {{ include "pg-database.fullname" . }}
    pgo-version: {{ .Chart.AppVersion }}
    pgouser: admin
{{ include "pg-database.labels" . | indent 4 }}
  name: {{ include "pg-database.fullname" . }}
spec:
  crVersion: {{ .Values.crVersion}}
  image: {{ include "pg-database.postgres-image" .}}
  imagePullPolicy: Always
  postgresVersion: {{ .Values.postgresVersion}}
  standby: {{ .Values.standby }}
  pause: {{ .Values.pause }}
  instances:
    - name: instance1
      replicas: {{ .Values.instances[0].replicas}}
      dataVolumeClaimSpec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.instances[0].dataVolumeClaimSpec.resources.requests.storage}}

  proxy:
    pgBouncer:
      image: {{ include "pg-database.pgbouncer-image" .}}
      replicas: {{ .Values.proxy.pgBouncer.replicas}}
      exposeSuperusers: {{ .Values.proxy.pgBouncer.exposeSuperusers | default true }}
      {{- if .Values.proxy.pgBouncer.resources }}
      resources:
        {{- if .Values.proxy.pgBouncer.resources.requests }}
        requests:
          cpu: {{ .Values.proxy.pgBouncer.resources.requests.cpu }}
          memory: {{ .Values.proxy.pgBouncer.resources.requests.memory }}
         {{- end}}
        {{- if .Values.proxy.pgBouncer.resources.limits }}
        limits:
          cpu: {{ .Values.proxy.pgBouncer.resources.limits.cpu }}
          memory: {{ .Values.proxy.pgBouncer.resources.limits.memory }}
      {{- end}}
      {{- end}}
      {- if .Values.proxy.pgBouncer.expose }}
      expose:
        type: {{ .Values.proxy.pgBouncer.expose.type }}
        annotations:
          pg-cluster-annot: {{ include "pg-database.fullname" . }}
        labels:
          pg-cluster-label: {{ include "pg-database.fullname" . }}
        {{- end }}

  pmm:
    enabled: {{ .Values.pmm.enabled }}
    image: {{ .Values.pmm.image.repository }}:{{ .Values.pmm.image.tag }}
    serverHost: {{ .Values.pmm.serverHost }}
    serverUser: admin
    pmmSecret: {{ include "pg-database.fullname" . }}-pmm-secret

  backup:
    pgbackrest:
      image: {{ include "pg-database.backup-image" . }}
      manual:
        repoName: repo1
        options:
         - --type=full
      repos:
      - name: repo1
        schedules:
          full: "0 0 * * 6"
        volume:
          volumeClaimSpec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: 1Gi